{"version":3,"sources":["game/components/Pieces/Tetrahedron.jsx","pages/Homepage/Homepage.jsx","game/components/Pieces/Sphere.jsx","game/logic/Pieces.js","game/components/Pieces/Pyramid.jsx","game/components/Pieces/Cube.jsx","game/components/PrometheusSquare/PrometheusSquare.jsx","game/logic/Players.js","game/logic/utils.js","game/components/PrometheusBoard/PrometheusBoard.jsx","game/logic/InitialGameState.js","pages/LocalMultiplayer/LocalMultiplayerPage.jsx","general/components/PlayerList/PlayerList.jsx","game/components/OnlinePrometheusBoard/OnlinePrometheusBoard.jsx","pages/CreateGame/CreateGamePage.jsx","pages/JoinGame/JoinGamePage.jsx","App.js","reportWebVitals.js","index.js"],"names":["Tetrahedron","fillColour","colour","strokeColour","className","viewBox","d","fill","stroke","strokeWidth","x1","y1","x2","y2","Homepage","to","Sphere","Pieces","BLACK_SPHERE","BLACK_TETRAHEDRON","BLACK_PYRAMID","BLACK_CUBE","WHITE_SPHERE","WHITE_TETRAHEDRON","WHITE_PYRAMID","WHITE_CUBE","Pyramid","x","y","width","height","Cube","renderPiece","piece","PrometheusSquare","selected","valid","onClick","Players","PLAYER_ONE","PLAYER_TWO","calculateValidMoves","rank","file","gameState","setValidMoves","firstTurn","movement","movementSpeed","validMoves","addValidMoves","isPlayerPiece","push","isArrayInArray","arr","item","item_as_string","JSON","stringify","some","ele","isUpper","str","test","str1","str2","PrometheusBoard","inProgress","setInProgress","playerOneSpherePlaced","playerTwoSpherePlaced","setPlayerOneSpherePlaced","setPlayerTwoSpherePlaced","setGameState","turn","setTurn","setWinner","useState","originRank","setOriginRank","originFile","setOriginFile","playerOneFirstTurn","setPlayerOneFirstTurn","playerTwoFirstTurn","setPlayerTwoFirstTurn","useEffect","addPlayerOneSphere","selectedSquare","toUpperCase","tmp","addPlayerTwoSphere","toLowerCase","selectCandidatePiece","candidatePiece","clearCandidatePiece","movePiece","destinationRank","destinationFile","Array","map","el","id","InitialGameState","LocalMultiplayerPage","parse","winner","inProgressWithSpheresPlaced","PlayerList","players","setPlayers","list","setList","newPlayerOrder","player","index","ready","readyUnitColor","isReady","style","backgroundColor","name","OnlinePrometheusBoard","socket","isGameStarted","playerNumber","username","isPlayerTurn","setIsPlayerTurn","isSpherePlaced","setIsSpherePlaced","hasOpponentRequestedRematch","setHasOpponentRequestedRematch","setFirstTurn","on","newPlayerTurnUsername","newGameState","winningUsername","addSphere","selectedSquareCaseTransformed","emit","winningMove","CreateGamePage","baseUrl","process","REACT_APP_BACKEND_URL","setSocket","setUsername","roomCode","setRoomCode","isInRoom","setIsInRoom","canStart","setCanStart","setIsGameStarted","errorMessage","setErrorMessage","hasError","setHasError","isLoading","setIsLoading","joinParty","useCallback","err","console","log","readyPlayers","filter","length","newSocket","io","connect","transports","htmlFor","type","placeholder","disabled","onChange","evt","target","value","axios","get","then","res","data","namespace","catch","createParty","findIndex","JoinGamePage","setIsReady","attemptJoinParty","exists","disconnect","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0b877b0.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Tetrahedron = ({ colour }) => {\n  const fillColour = colour === \"black\" ? \"black\" : \"whitesmoke\";\n  const strokeColour = \"#d4af37\";\n\n  return (\n    <div className=\"tetrahedron\">\n      <svg viewBox=\"0 -5 100 100\">\n        <path\n          d=\"M2.70666 86.0876L50.9746 2.48511L99.2426 86.0876H2.70666Z\"\n          fill={fillColour}\n          stroke={strokeColour}\n          strokeWidth=\"3\"\n        />\n        <path\n          d=\"M50.9746 54.0695L47.4746 60.1316H54.4746L50.9746 54.0695Z\"\n          fill={strokeColour}\n        />\n        <line\n          x1=\"2.49072\"\n          y1=\"86.2194\"\n          x2=\"45.792\"\n          y2=\"61.2194\"\n          stroke={strokeColour}\n          strokeWidth=\"3\"\n        />\n        <line\n          x1=\"56.1626\"\n          y1=\"61.2167\"\n          x2=\"99.4639\"\n          y2=\"86.2167\"\n          stroke={strokeColour}\n          strokeWidth=\"3\"\n        />\n        <line\n          x1=\"50.9771\"\n          y1=\"52.2212\"\n          x2=\"50.9771\"\n          y2=\"2.22119\"\n          stroke={strokeColour}\n          strokeWidth=\"3\"\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default Tetrahedron;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Tetrahedron from \"../../game/components/Pieces/Tetrahedron\";\n\nconst Homepage = () => {\n  return (\n    <div className=\"flex flex-col justify-center items-center h-screen\">\n      <h1 className=\"text-xl font-bold\">Welcome to Prometheus Concept!</h1>\n      <p>A chess-like game, with less rules and more possibilities</p>\n      <div className=\"w-32\">\n        <Tetrahedron />\n      </div>\n      <Link\n        className=\"block mt-4 bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\"\n        to=\"/create\"\n      >\n        Create Game\n      </Link>\n      <Link\n        className=\"block mt-4 bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\"\n        to=\"/join\"\n      >\n        Join Game\n      </Link>\n      <Link\n        className=\"block mt-4 bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\"\n        to=\"/local-multiplayer\"\n      >\n        Local Multiplayer\n      </Link>\n    </div>\n  );\n};\n\nexport default Homepage;\n","import React from \"react\";\n\nconst Sphere = ({ colour }) => {\n  return <div className={`sphere sphere-${colour}`} />;\n};\n\nexport default Sphere;\n","const Pieces = {\n  BLACK_SPHERE: \"s\",\n  BLACK_TETRAHEDRON: \"t\",\n  BLACK_PYRAMID: \"p\",\n  BLACK_CUBE: \"c\",\n  WHITE_SPHERE: \"S\",\n  WHITE_TETRAHEDRON: \"T\",\n  WHITE_PYRAMID: \"P\",\n  WHITE_CUBE: \"C\",\n};\n\nexport default Pieces;\n","import React from \"react\";\n\nconst Pyramid = ({ colour }) => {\n  const fillColour = colour === \"black\" ? \"black\" : \"whitesmoke\";\n  const strokeColour = \"#d4af37\";\n\n  return (\n    <div className=\"pyramid\">\n      <svg viewBox=\"0 0 101 101\">\n        <rect\n          x=\"1.4624\"\n          y=\"1.5033\"\n          width=\"98\"\n          height=\"98\"\n          fill={fillColour}\n          stroke={strokeColour}\n          strokeWidth=\"3\"\n        />\n        <line\n          x1=\"54.5015\"\n          y1=\"54.5101\"\n          x2=\"99.7564\"\n          y2=\"99.7649\"\n          stroke={strokeColour}\n          strokeWidth=\"3\"\n        />\n        <line\n          x1=\"1.16902\"\n          y1=\"1.21184\"\n          x2=\"46.4239\"\n          y2=\"46.4667\"\n          stroke={strokeColour}\n          strokeWidth=\"3\"\n        />\n        <line\n          x1=\"46.4337\"\n          y1=\"54.5455\"\n          x2=\"1.17884\"\n          y2=\"99.8003\"\n          stroke={strokeColour}\n          strokeWidth=\"3\"\n        />\n        <line\n          x1=\"99.755\"\n          y1=\"1.20991\"\n          x2=\"54.5001\"\n          y2=\"46.4647\"\n          stroke={strokeColour}\n          strokeWidth=\"3\"\n        />\n        <rect\n          x=\"47.4624\"\n          y=\"47.5033\"\n          width=\"6\"\n          height=\"6\"\n          fill={strokeColour}\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default Pyramid;\n","import React from \"react\";\n\nconst Cube = ({ colour }) => {\n  const fillColour = colour === \"black\" ? \"black\" : \"whitesmoke\";\n  const strokeColour = \"#d4af37\";\n\n  return (\n    <div className=\"cube\">\n      <svg viewBox=\"0 0 100 100\">\n        <rect\n          height=\"100\"\n          width=\"100\"\n          y=\"0\"\n          x=\"0\"\n          fill={fillColour}\n          stroke={strokeColour}\n          strokeWidth=\"5\"\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default Cube;\n","import React from \"react\";\nimport Sphere from \"../Pieces/Sphere\";\nimport Pieces from \"../../logic/Pieces\";\nimport Tetrahedron from \"../Pieces/Tetrahedron\";\nimport Pyramid from \"../Pieces/Pyramid\";\nimport Cube from \"../Pieces/Cube\";\n\nconst renderPiece = (piece) => {\n  switch (piece) {\n    case Pieces.WHITE_SPHERE:\n      return <Sphere colour=\"white\" />;\n    case Pieces.BLACK_SPHERE:\n      return <Sphere colour=\"black\" />;\n    case Pieces.WHITE_TETRAHEDRON:\n      return <Tetrahedron colour=\"white\" />;\n    case Pieces.BLACK_TETRAHEDRON:\n      return <Tetrahedron colour=\"black\" />;\n    case Pieces.WHITE_PYRAMID:\n      return <Pyramid colour=\"white\" />;\n    case Pieces.BLACK_PYRAMID:\n      return <Pyramid colour=\"black\" />;\n    case Pieces.WHITE_CUBE:\n      return <Cube colour=\"white\" />;\n    case Pieces.BLACK_CUBE:\n      return <Cube colour=\"black\" />;\n    default:\n      return piece;\n  }\n};\n\nconst PrometheusSquare = ({ colour, piece, selected, valid, onClick }) => {\n  return (\n    <div\n      className={`square square-${colour} ${\n        selected ? \"square-selected\" : \"\"\n      } ${valid ? \"square-valid\" : \"\"}`}\n      onClick={onClick}\n    >\n      {renderPiece(piece, colour)}\n    </div>\n  );\n};\n\nexport default PrometheusSquare;\n","const Players = {\n  PLAYER_ONE: \"player_one\",\n  PLAYER_TWO: \"player_two\",\n};\n\nexport default Players;\n","import Pieces from \"./Pieces\";\n\nexport const calculateValidMoves = (\n  rank,\n  file,\n  gameState,\n  setValidMoves,\n  firstTurn\n) => {\n  const piece = gameState[rank][file];\n  const movement = movementSpeed(piece);\n  let validMoves = [];\n\n  if (piece === Pieces.WHITE_SPHERE || piece === Pieces.BLACK_SPHERE) {\n    return;\n  }\n\n  addValidMoves(\n    rank,\n    file - 1,\n    movement - 1,\n    validMoves,\n    piece,\n    gameState,\n    firstTurn\n  ); // up\n  addValidMoves(\n    rank + 1,\n    file,\n    movement - 1,\n    validMoves,\n    piece,\n    gameState,\n    firstTurn\n  ); // right\n  addValidMoves(\n    rank,\n    file + 1,\n    movement - 1,\n    validMoves,\n    piece,\n    gameState,\n    firstTurn\n  ); // down\n  addValidMoves(\n    rank - 1,\n    file,\n    movement - 1,\n    validMoves,\n    piece,\n    gameState,\n    firstTurn\n  ); // left\n\n  setValidMoves(validMoves);\n};\n\nconst addValidMoves = (\n  x,\n  y,\n  movement,\n  validMoves,\n  piece,\n  gameState,\n  firstTurn\n) => {\n  if (7 < x || x < 0 || 7 < y || y < 0) return;\n\n  if (gameState[x][y] && firstTurn) return; // Can't take a piece on your first turn\n  if (gameState[x][y] && isPlayerPiece(gameState[x][y], piece)) return; // Abort if hits own piece\n  if (gameState[x][y]) {\n    validMoves.push([x, y]);\n    return;\n  } // Mark valid and abort if hit opponent piece\n  if (movement === 0) {\n    validMoves.push([x, y]);\n    return;\n  } // Final move terminates\n\n  validMoves.push([x, y]);\n\n  addValidMoves(\n    x,\n    y - 1,\n    movement - 1,\n    validMoves,\n    piece,\n    gameState,\n    firstTurn\n  ); // up\n  addValidMoves(\n    x + 1,\n    y,\n    movement - 1,\n    validMoves,\n    piece,\n    gameState,\n    firstTurn\n  ); // right\n  addValidMoves(\n    x,\n    y + 1,\n    movement - 1,\n    validMoves,\n    piece,\n    gameState,\n    firstTurn\n  ); // down\n  addValidMoves(\n    x - 1,\n    y,\n    movement - 1,\n    validMoves,\n    piece,\n    gameState,\n    firstTurn\n  ); // left\n};\n\nexport const isArrayInArray = (arr, item) => {\n  const item_as_string = JSON.stringify(item);\n\n  return arr.some(function (ele) {\n    return JSON.stringify(ele) === item_as_string;\n  });\n};\n\nconst movementSpeed = (piece) => {\n  switch (piece) {\n    case Pieces.WHITE_SPHERE:\n    case Pieces.BLACK_SPHERE:\n      return 0;\n    case Pieces.WHITE_TETRAHEDRON:\n    case Pieces.BLACK_TETRAHEDRON:\n      return 4;\n    case Pieces.WHITE_PYRAMID:\n    case Pieces.BLACK_PYRAMID:\n      return 5;\n    case Pieces.WHITE_CUBE:\n    case Pieces.BLACK_CUBE:\n      return 8;\n    default:\n      return 0;\n  }\n};\n\nconst isUpper = (str) => {\n  return !/[a-z]/.test(str) && /[A-Z]/.test(str);\n};\n\nconst isPlayerPiece = (str1, str2) => {\n  return isUpper(str1) === isUpper(str2);\n};\n","import React, { useEffect, useState } from \"react\";\nimport PrometheusSquare from \"../PrometheusSquare/PrometheusSquare\";\nimport Pieces from \"../../logic/Pieces\";\nimport Players from \"../../logic/Players\";\nimport { calculateValidMoves, isArrayInArray } from \"../../logic/utils\";\n\nconst PrometheusBoard = ({\n  inProgress,\n  setInProgress,\n  playerOneSpherePlaced,\n  playerTwoSpherePlaced,\n  setPlayerOneSpherePlaced,\n  setPlayerTwoSpherePlaced,\n  gameState,\n  setGameState,\n  turn,\n  setTurn,\n  setWinner,\n}) => {\n  const [originRank, setOriginRank] = useState(null);\n  const [originFile, setOriginFile] = useState(null);\n  const [playerOneFirstTurn, setPlayerOneFirstTurn] = useState(true);\n  const [playerTwoFirstTurn, setPlayerTwoFirstTurn] = useState(true);\n  const [validMoves, setValidMoves] = useState([]);\n\n  useEffect(() => {\n    setPlayerOneFirstTurn(true);\n    setPlayerTwoFirstTurn(true);\n  }, [inProgress]);\n\n  const makeMove = (rank, file) => {\n    !playerOneSpherePlaced\n      ? addPlayerOneSphere(rank, file)\n      : !playerTwoSpherePlaced\n      ? addPlayerTwoSphere(rank, file)\n      : originRank === null && originFile === null\n      ? selectCandidatePiece(rank, file)\n      : originRank === rank && originFile === file\n      ? clearCandidatePiece()\n      : movePiece(rank, file);\n  };\n\n  const addPlayerOneSphere = (rank, file) => {\n    // Sphere has to replace one of Player One's pieces.\n    let selectedSquare = gameState[rank][file];\n    if (selectedSquare && selectedSquare === selectedSquare.toUpperCase()) {\n      let tmp = gameState;\n      tmp[rank][file] = Pieces.WHITE_SPHERE;\n      setGameState(tmp);\n      setPlayerOneSpherePlaced(true);\n    }\n  };\n\n  const addPlayerTwoSphere = (rank, file) => {\n    // Sphere has to replace one of Player Two's pieces.\n    let selectedSquare = gameState[rank][file];\n    if (selectedSquare && selectedSquare === selectedSquare.toLowerCase()) {\n      let tmp = gameState;\n      tmp[rank][file] = Pieces.BLACK_SPHERE;\n      setGameState(tmp);\n      setPlayerTwoSpherePlaced(true);\n    }\n  };\n\n  const selectCandidatePiece = (rank, file) => {\n    let candidatePiece = gameState[rank][file];\n    if (\n      (turn === Players.PLAYER_ONE &&\n        candidatePiece &&\n        candidatePiece === candidatePiece.toUpperCase()) ||\n      (turn === Players.PLAYER_TWO &&\n        candidatePiece &&\n        candidatePiece === candidatePiece.toLowerCase())\n    ) {\n      setOriginRank(rank);\n      setOriginFile(file);\n      calculateValidMoves(\n        rank,\n        file,\n        gameState,\n        setValidMoves,\n        playerOneFirstTurn || playerTwoFirstTurn\n      );\n    }\n  };\n\n  const clearCandidatePiece = () => {\n    setOriginRank(null);\n    setOriginFile(null);\n    setValidMoves([]);\n  };\n\n  const movePiece = (destinationRank, destinationFile) => {\n    if (isArrayInArray(validMoves, [destinationRank, destinationFile])) {\n      let tmp = gameState;\n      if (gameState[destinationRank][destinationFile].toUpperCase() === \"S\") {\n        setWinner(turn);\n        setInProgress(false);\n      }\n      if (playerOneFirstTurn && turn === Players.PLAYER_ONE) {\n        setPlayerOneFirstTurn(false);\n      }\n      if (playerTwoFirstTurn && turn === Players.PLAYER_TWO) {\n        setPlayerTwoFirstTurn(false);\n      }\n      tmp[destinationRank][destinationFile] = gameState[originRank][originFile];\n      tmp[originRank][originFile] = \"\";\n      setGameState(tmp);\n      setOriginRank(null);\n      setOriginFile(null);\n      setValidMoves([]);\n      setTurn(\n        turn === Players.PLAYER_ONE ? Players.PLAYER_TWO : Players.PLAYER_ONE\n      );\n    }\n  };\n\n  return (\n    <div className=\"board\">\n      <div className=\"content\">\n        {Array(8)\n          .fill(1)\n          .map((el, x) => {\n            return (\n              <div id={`rank-${x}`} className=\"board-row flex flex-row\" key={x}>\n                {Array(8)\n                  .fill(1)\n                  .map((el, y) => {\n                    return (\n                      <PrometheusSquare\n                        colour={(x + y) % 2 === 0 ? \"black\" : \"white\"}\n                        piece={gameState[x][y]}\n                        selected={x === originRank && y === originFile}\n                        valid={isArrayInArray(validMoves, [x, y])}\n                        onClick={() => {\n                          if (inProgress) makeMove(x, y);\n                        }}\n                        key={y}\n                      />\n                    );\n                  })}\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default PrometheusBoard;\n","import Pieces from \"./Pieces\";\n\nconst InitialGameState = [\n  [\n    Pieces.BLACK_CUBE,\n    Pieces.BLACK_CUBE,\n    Pieces.BLACK_CUBE,\n    Pieces.BLACK_CUBE,\n    Pieces.BLACK_CUBE,\n    Pieces.BLACK_CUBE,\n    Pieces.BLACK_CUBE,\n    Pieces.BLACK_CUBE,\n  ],\n  [\n    Pieces.BLACK_PYRAMID,\n    Pieces.BLACK_PYRAMID,\n    Pieces.BLACK_PYRAMID,\n    Pieces.BLACK_PYRAMID,\n    Pieces.BLACK_PYRAMID,\n    Pieces.BLACK_PYRAMID,\n    Pieces.BLACK_PYRAMID,\n    Pieces.BLACK_PYRAMID,\n  ],\n  [\n    Pieces.BLACK_TETRAHEDRON,\n    Pieces.BLACK_TETRAHEDRON,\n    Pieces.BLACK_TETRAHEDRON,\n    Pieces.BLACK_TETRAHEDRON,\n    Pieces.BLACK_TETRAHEDRON,\n    Pieces.BLACK_TETRAHEDRON,\n    Pieces.BLACK_TETRAHEDRON,\n    Pieces.BLACK_TETRAHEDRON,\n  ],\n  [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n  [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n  [\n    Pieces.WHITE_TETRAHEDRON,\n    Pieces.WHITE_TETRAHEDRON,\n    Pieces.WHITE_TETRAHEDRON,\n    Pieces.WHITE_TETRAHEDRON,\n    Pieces.WHITE_TETRAHEDRON,\n    Pieces.WHITE_TETRAHEDRON,\n    Pieces.WHITE_TETRAHEDRON,\n    Pieces.WHITE_TETRAHEDRON,\n  ],\n  [\n    Pieces.WHITE_PYRAMID,\n    Pieces.WHITE_PYRAMID,\n    Pieces.WHITE_PYRAMID,\n    Pieces.WHITE_PYRAMID,\n    Pieces.WHITE_PYRAMID,\n    Pieces.WHITE_PYRAMID,\n    Pieces.WHITE_PYRAMID,\n    Pieces.WHITE_PYRAMID,\n  ],\n  [\n    Pieces.WHITE_CUBE,\n    Pieces.WHITE_CUBE,\n    Pieces.WHITE_CUBE,\n    Pieces.WHITE_CUBE,\n    Pieces.WHITE_CUBE,\n    Pieces.WHITE_CUBE,\n    Pieces.WHITE_CUBE,\n    Pieces.WHITE_CUBE,\n  ],\n];\n\nexport default InitialGameState;\n","import React, { useState } from \"react\";\nimport \"../../App.css\";\n\nimport PrometheusBoard from \"../../game/components/PrometheusBoard/PrometheusBoard\";\nimport Players from \"../../game/logic/Players\";\nimport InitialGameState from \"../../game/logic/InitialGameState\";\n\nconst LocalMultiplayerPage = () => {\n  const [inProgress, setInProgress] = useState(false);\n  const [playerOneSpherePlaced, setPlayerOneSpherePlaced] = useState(false);\n  const [playerTwoSpherePlaced, setPlayerTwoSpherePlaced] = useState(false);\n  // Stringify hack to deep clone InitialGameState - avoids mutation.\n  // TODO: Use lodash here instead?\n  const [gameState, setGameState] = useState(\n    JSON.parse(JSON.stringify(InitialGameState))\n  );\n  const [winner, setWinner] = useState(null);\n  const [turn, setTurn] = useState(Players.PLAYER_ONE);\n\n  const inProgressWithSpheresPlaced =\n    inProgress && playerOneSpherePlaced && playerTwoSpherePlaced;\n\n  const resetGame = () => {\n    setInProgress(true);\n    setWinner(null);\n    setGameState(JSON.parse(JSON.stringify(InitialGameState)));\n    setPlayerOneSpherePlaced(false);\n    setPlayerTwoSpherePlaced(false);\n  };\n\n  return (\n    <div className=\"app p-8 flex flex-col justify-center items-center h-screen\">\n      <PrometheusBoard\n        inProgress={inProgress}\n        setInProgress={setInProgress}\n        playerOneSpherePlaced={playerOneSpherePlaced}\n        playerTwoSpherePlaced={playerTwoSpherePlaced}\n        setPlayerOneSpherePlaced={setPlayerOneSpherePlaced}\n        setPlayerTwoSpherePlaced={setPlayerTwoSpherePlaced}\n        gameState={gameState}\n        setGameState={setGameState}\n        turn={turn}\n        setTurn={setTurn}\n        setWinner={setWinner}\n      />\n      <div className=\"below-board-container mt-4\">\n        {winner && (\n          <span className=\"block m-auto mt-4 bg-white hover:bg-gray-100 text-gray-800 py-2 px-4\">\n            {winner === Players.PLAYER_ONE ? \"Player One\" : \"Player Two\"} won!\n          </span>\n        )}\n        {inProgress && !playerOneSpherePlaced && (\n          <span className=\"block m-auto mt-4 bg-white hover:bg-gray-100 text-gray-800 py-2 px-4\">\n            Place Player One's sphere.\n          </span>\n        )}\n        {inProgress && playerOneSpherePlaced && !playerTwoSpherePlaced && (\n          <span className=\"block m-auto mt-4 bg-white hover:bg-gray-100 text-gray-800 py-2 px-4\">\n            Place Player Two's sphere.\n          </span>\n        )}\n        {inProgressWithSpheresPlaced && (\n          <span className=\"block m-auto mt-4 bg-white hover:bg-gray-100 text-gray-800 py-2 px-4\">\n            {turn === Players.PLAYER_ONE ? \"White\" : \"Black\"}'s turn.\n          </span>\n        )}\n        {!inProgress && (\n          <button\n            className=\"block m-auto mt-4 bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\"\n            onClick={() => resetGame()}\n          >\n            {winner ? \"Play again?\" : \"Start!\"}\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default LocalMultiplayerPage;\n","import React from \"react\";\nimport { ReactSortable } from \"react-sortablejs\";\n\nconst PlayerList = ({ players, setPlayers }) => {\n  return (\n    <div className=\"readyUnitContainer\">\n      <ReactSortable\n        list={players}\n        setList={(newPlayerOrder) => setPlayers(newPlayerOrder)}\n      >\n        {players.map((player, index) => {\n          let ready;\n          let readyUnitColor = \"#E46258\";\n          if (player.isReady) {\n            ready = <b>Ready!</b>;\n            readyUnitColor = \"#73C373\";\n          } else {\n            ready = <b>Not Ready</b>;\n          }\n          return (\n            <div\n              className=\"readyUnit\"\n              style={{ backgroundColor: readyUnitColor }}\n              key={index}\n            >\n              <p>\n                {index === 0 ? \"White\" : \"Black\"}: {player.name} {ready}\n              </p>\n            </div>\n          );\n        })}\n      </ReactSortable>\n    </div>\n  );\n};\n\nexport default PlayerList;\n","import React, { useEffect, useState } from \"react\";\nimport PrometheusSquare from \"../PrometheusSquare/PrometheusSquare\";\n\nimport InitialGameState from \"../../logic/InitialGameState\";\nimport Pieces from \"../../logic/Pieces\";\nimport Players from \"../../logic/Players\";\n\nimport { calculateValidMoves, isArrayInArray } from \"../../logic/utils\";\n\nconst OnlinePrometheusBoard = ({\n  socket,\n  isGameStarted,\n  playerNumber,\n  username,\n}) => {\n  const [inProgress, setInProgress] = useState(isGameStarted);\n  const [isPlayerTurn, setIsPlayerTurn] = useState(null);\n\n  const [isSpherePlaced, setIsSpherePlaced] = useState(false);\n\n  // Stringify hack to deep clone InitialGameState - avoids mutation.\n  const [gameState, setGameState] = useState(\n    JSON.parse(JSON.stringify(InitialGameState))\n  );\n  const [winner, setWinner] = useState(null);\n  const [hasOpponentRequestedRematch, setHasOpponentRequestedRematch] =\n    useState(false);\n\n  const resetGame = () => {\n    setInProgress(true);\n    setWinner(null);\n    setGameState(JSON.parse(JSON.stringify(InitialGameState)));\n    setIsSpherePlaced(false);\n  };\n\n  const [originRank, setOriginRank] = useState(null);\n  const [originFile, setOriginFile] = useState(null);\n  const [firstTurn, setFirstTurn] = useState(true);\n  const [validMoves, setValidMoves] = useState([]);\n\n  useEffect(() => {\n    setFirstTurn(true);\n  }, [inProgress]);\n\n  const makeMove = (rank, file) =>\n    !isSpherePlaced\n      ? addSphere(rank, file)\n      : originRank === null && originFile === null\n      ? selectCandidatePiece(rank, file)\n      : originRank === rank && originFile === file\n      ? clearCandidatePiece()\n      : movePiece(rank, file);\n\n  socket.on(\"updatePlayerTurn\", (newPlayerTurnUsername) => {\n    setIsPlayerTurn(newPlayerTurnUsername === username);\n  });\n\n  socket.on(\"updateGameState\", (newGameState) => {\n    setGameState(newGameState);\n  });\n\n  socket.on(\"updatePlayerWon\", (winningUsername) => {\n    setWinner(winningUsername);\n    setInProgress(false);\n  });\n\n  socket.on(\"opponentRequestedRematch\", () => {\n    setHasOpponentRequestedRematch(true);\n  });\n\n  socket.on(\"resetGame\", () => {\n    resetGame();\n  });\n\n  const addSphere = (rank, file) => {\n    let selectedSquare = gameState[rank][file];\n\n    // Use correct function for either white or black\n    const selectedSquareCaseTransformed =\n      playerNumber === Players.PLAYER_ONE\n        ? selectedSquare.toUpperCase()\n        : selectedSquare.toLowerCase();\n\n    if (selectedSquare && selectedSquare === selectedSquareCaseTransformed) {\n      let tmp = gameState;\n      tmp[rank][file] =\n        playerNumber === Players.PLAYER_ONE\n          ? Pieces.WHITE_SPHERE\n          : Pieces.BLACK_SPHERE;\n      setGameState(tmp);\n      setIsSpherePlaced(true);\n\n      socket.emit(\"playerMovedPiece\", gameState);\n    }\n  };\n\n  const selectCandidatePiece = (rank, file) => {\n    let candidatePiece = gameState[rank][file];\n    if (\n      (playerNumber === Players.PLAYER_ONE &&\n        candidatePiece &&\n        candidatePiece === candidatePiece.toUpperCase()) ||\n      (playerNumber === Players.PLAYER_TWO &&\n        candidatePiece &&\n        candidatePiece === candidatePiece.toLowerCase())\n    ) {\n      setOriginRank(rank);\n      setOriginFile(file);\n      calculateValidMoves(rank, file, gameState, setValidMoves, firstTurn);\n    }\n  };\n\n  const clearCandidatePiece = () => {\n    setOriginRank(null);\n    setOriginFile(null);\n    setValidMoves([]);\n  };\n\n  const movePiece = (destinationRank, destinationFile) => {\n    if (isArrayInArray(validMoves, [destinationRank, destinationFile])) {\n      let tmp = gameState;\n      let winningMove = false;\n      if (gameState[destinationRank][destinationFile].toUpperCase() === \"S\") {\n        winningMove = true;\n      }\n      if (firstTurn) {\n        setFirstTurn(false);\n      }\n      tmp[destinationRank][destinationFile] = gameState[originRank][originFile];\n      tmp[originRank][originFile] = \"\";\n      setGameState(tmp);\n      setOriginRank(null);\n      setOriginFile(null);\n      setValidMoves([]);\n\n      if (winningMove) {\n        socket.emit(\"playerWon\", gameState);\n      } else {\n        socket.emit(\"playerMovedPiece\", gameState);\n      }\n    }\n  };\n\n  return (\n    <div className=\"board\">\n      <div className=\"content\">\n        {Array(8)\n          .fill(1)\n          .map((el, x) => {\n            return (\n              <div id={`rank-${x}`} className=\"board-row flex flex-row\" key={x}>\n                {Array(8)\n                  .fill(1)\n                  .map((el, y) => {\n                    return (\n                      <PrometheusSquare\n                        colour={(x + y) % 2 === 0 ? \"black\" : \"white\"}\n                        piece={gameState[x][y]}\n                        selected={x === originRank && y === originFile}\n                        valid={isArrayInArray(validMoves, [x, y])}\n                        onClick={() => {\n                          if (inProgress && isPlayerTurn) makeMove(x, y);\n                        }}\n                        key={y}\n                      />\n                    );\n                  })}\n              </div>\n            );\n          })}\n        <div className=\"below-board-container mt-4\">\n          {winner && (\n            <span className=\"block m-auto mt-4 bg-white hover:bg-gray-100 text-gray-800 py-2 px-4\">\n              {winner} won!\n            </span>\n          )}\n          {inProgress && isPlayerTurn && !isSpherePlaced && (\n            <span className=\"block m-auto mt-4 bg-white hover:bg-gray-100 text-gray-800 py-2 px-4\">\n              Place your sphere.\n            </span>\n          )}\n          {inProgress && isPlayerTurn && isSpherePlaced && (\n            <span className=\"block m-auto mt-4 bg-white hover:bg-gray-100 text-gray-800 py-2 px-4\">\n              Make your move!\n            </span>\n          )}\n          {inProgress && !isPlayerTurn && (\n            <span className=\"block m-auto mt-4 bg-white hover:bg-gray-100 text-gray-800 py-2 px-4\">\n              Waiting for opponent...\n            </span>\n          )}\n          {!inProgress && (\n            <button\n              className=\"block m-auto mt-4 bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\"\n              onClick={() => {\n                socket.emit(\"requestRematch\", username);\n              }}\n            >\n              Rematch?\n            </button>\n          )}\n          {!inProgress && hasOpponentRequestedRematch && (\n            <span className=\"block m-auto mt-4 bg-white hover:bg-gray-100 text-gray-800 py-2 px-4\">\n              Opponent has requested rematch.\n            </span>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OnlinePrometheusBoard;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\n\nimport PlayerList from \"../../general/components/PlayerList/PlayerList\";\nimport OnlinePrometheusBoard from \"../../game/components/OnlinePrometheusBoard/OnlinePrometheusBoard\";\n\nimport Players from \"../../game/logic/Players\";\n\nconst CreateGamePage = () => {\n  const baseUrl = process.env.REACT_APP_BACKEND_URL || \"http://localhost:8000\";\n  const [socket, setSocket] = useState(null);\n  const [username, setUsername] = useState(\"\");\n  const [roomCode, setRoomCode] = useState(null);\n  const [isInRoom, setIsInRoom] = useState(false);\n  const [canStart, setCanStart] = useState(false);\n  const [isGameStarted, setIsGameStarted] = useState(false);\n  const [players, setPlayers] = useState(null);\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [hasError, setHasError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const createParty = (username) => {\n    if (!username) {\n      setErrorMessage(\"Username must be set\");\n      setHasError(true);\n      return;\n    }\n\n    setHasError(false);\n    setIsLoading(true);\n\n    axios\n      .get(`${baseUrl}/createNamespace`)\n      .then((res) => {\n        setIsLoading(false);\n        setRoomCode(res.data.namespace);\n      })\n      .catch((err) => {\n        console.log(err);\n        setIsLoading(false);\n        setErrorMessage(\"Error creating room, server is unreachable\");\n        setHasError(true);\n      });\n  };\n\n  const joinParty = useCallback(() => {\n    socket.emit(\"setName\", username);\n\n    socket.on(\"joinSuccess\", () => {\n      setIsLoading(false);\n      setIsInRoom(true);\n    });\n\n    socket.on(\"joinFailed\", (err) => {\n      console.log(\"join failed, cause: \" + err);\n      setIsLoading(false);\n    });\n\n    socket.on(\"leader\", function () {\n      console.log(\"You are the leader\");\n    });\n\n    socket.on(\"partyUpdate\", (players) => {\n      setPlayers(players);\n\n      const readyPlayers = players\n        ?.map((player) => player.isReady)\n        .filter((isReady) => isReady === true).length;\n\n      if (players.length === 2 && readyPlayers === players.length) {\n        setCanStart(true);\n      } else {\n        setCanStart(false);\n      }\n    });\n\n    socket.on(\"disconnected\", function () {\n      console.log(\"You've lost connection with the server\");\n    });\n  }, [socket, username]);\n\n  const startGame = () => {\n    socket.emit(\"startGameSignal\", players);\n\n    socket.on(\"startGame\", () => {\n      setIsGameStarted(true);\n    });\n  };\n\n  useEffect(() => {\n    if (roomCode) {\n      const newSocket = io.connect(`${baseUrl}/${roomCode}`, {\n        transports: [\"websocket\"],\n      });\n\n      setSocket(newSocket);\n    }\n  }, [baseUrl, roomCode]);\n\n  useEffect(() => {\n    if (socket) {\n      joinParty();\n    }\n  }, [socket, joinParty]);\n\n  return (\n    <div className=\"app p-8 flex flex-col justify-center items-center h-screen\">\n      {!isGameStarted && (\n        <div className=\"mb-4\">\n          <label\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\n            htmlFor=\"username\"\n          >\n            Username\n          </label>\n          <input\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"username\"\n            type=\"text\"\n            placeholder=\"Username\"\n            disabled={isInRoom}\n            onChange={(evt) => setUsername(evt.target.value)}\n          />\n          {hasError && <div className=\"mt-4\">{errorMessage}</div>}\n          {!isLoading && !roomCode && (\n            <button\n              className=\"block m-auto mt-4 bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\"\n              onClick={() => createParty(username)}\n            >\n              Create game\n            </button>\n          )}\n\n          {roomCode && (\n            <div>\n              <p>\n                ROOM CODE: <br></br> <br></br>\n                <b className=\"\" onClick={() => {}}>\n                  {roomCode}\n                </b>\n              </p>\n              {/*{this.state.copied ? <p>Copied to clipboard</p> : null}*/}\n            </div>\n          )}\n\n          {isInRoom && <PlayerList players={players} setPlayers={setPlayers} />}\n\n          {canStart && (\n            <button\n              className=\"block m-auto mt-4 bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\"\n              onClick={() => startGame()}\n            >\n              Start Game\n            </button>\n          )}\n        </div>\n      )}\n\n      {isGameStarted && (\n        <OnlinePrometheusBoard\n          socket={socket}\n          isGameStarted={isGameStarted}\n          playerNumber={\n            players.findIndex((player) => player.name === username) === 0\n              ? Players.PLAYER_ONE\n              : Players.PLAYER_TWO\n          }\n          username={username}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default CreateGamePage;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\n\nimport Players from \"../../game/logic/Players\";\nimport OnlinePrometheusBoard from \"../../game/components/OnlinePrometheusBoard/OnlinePrometheusBoard\";\n\nconst JoinGamePage = () => {\n  const baseUrl = process.env.REACT_APP_BACKEND_URL || \"http://localhost:8000\";\n  const [socket, setSocket] = useState(null);\n  const [username, setUsername] = useState(\"\");\n  const [roomCode, setRoomCode] = useState(null);\n  const [isReady, setIsReady] = useState(false);\n  const [isInRoom, setIsInRoom] = useState(false);\n  const [isGameStarted, setIsGameStarted] = useState(false);\n  const [players, setPlayers] = useState(null);\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [hasError, setHasError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const newSocket = io.connect(`${baseUrl}/${roomCode}`, {\n      transports: [\"websocket\"],\n    });\n\n    setSocket(newSocket);\n  }, [baseUrl, roomCode]);\n\n  const joinParty = () => {\n    socket.emit(\"setName\", username);\n\n    socket.on(\"joinSuccess\", function () {\n      setIsLoading(false);\n      setIsInRoom(true);\n    });\n\n    socket.on(\"joinFailed\", function (err) {\n      setErrorMessage(err);\n      setHasError(true);\n      setIsLoading(false);\n\n      socket.disconnect();\n    });\n\n    socket.on(\"partyUpdate\", (players) => {\n      setPlayers(players);\n    });\n\n    socket.on(\"startGame\", () => {\n      setIsGameStarted(true);\n    });\n\n    socket.on(\"disconnected\", function () {\n      console.log(\"You've lost connection with the server\");\n    });\n  };\n\n  const attemptJoinParty = () => {\n    if (!username) {\n      setErrorMessage(\"Name must be set\");\n      setHasError(true);\n      return;\n    }\n\n    if (!roomCode) {\n      setErrorMessage(\"Room code must be specified\");\n      setHasError(true);\n      return;\n    }\n\n    setIsLoading(true);\n\n    axios\n      .get(`${baseUrl}/exists/${roomCode}`)\n      .then(function (res) {\n        if (res.data.exists) {\n          setErrorMessage(\"\");\n          joinParty();\n        } else {\n          setIsLoading(false);\n          setErrorMessage(\"Invalid Party Code\");\n          setHasError(true);\n        }\n      })\n      .catch(function (err) {\n        setIsLoading(false);\n        setErrorMessage(\"Server error: \" + err);\n        setHasError(true);\n      });\n  };\n\n  const reportReady = () => {\n    socket.emit(\"setReady\", true);\n    socket.on(\"readyConfirm\", () => {\n      setIsReady(true);\n    });\n  };\n\n  return (\n    <div className=\"app p-8 flex flex-col justify-center items-center h-screen\">\n      {!isGameStarted && (\n        <div className=\"mb-4\">\n          <label\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\n            htmlFor=\"username\"\n          >\n            Username\n          </label>\n          <input\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"username\"\n            type=\"text\"\n            placeholder=\"Username\"\n            disabled={isInRoom}\n            onChange={(evt) => setUsername(evt.target.value)}\n          />\n          <label\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\n            htmlFor=\"username\"\n          >\n            Room Code\n          </label>\n          <input\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"roomCode\"\n            type=\"text\"\n            placeholder=\"Room Code\"\n            disabled={isInRoom}\n            onChange={(evt) => setRoomCode(evt.target.value)}\n          />\n          {hasError && <div className=\"mt-4\">{errorMessage}</div>}\n          {!isLoading && !isInRoom && (\n            <button\n              className=\"block m-auto mt-4 bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\"\n              onClick={() => attemptJoinParty()}\n              disabled={isLoading}\n            >\n              Join game\n            </button>\n          )}\n\n          {isInRoom && !isReady && (\n            <button\n              className=\"block m-auto mt-4 bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\"\n              onClick={() => reportReady()}\n              disabled={isReady}\n            >\n              Ready up!\n            </button>\n          )}\n          {isInRoom && isReady && (\n            <p className=\"block text-gray-700 m-4\">Waiting for host...</p>\n          )}\n        </div>\n      )}\n\n      {isGameStarted && (\n        <OnlinePrometheusBoard\n          socket={socket}\n          isGameStarted={isGameStarted}\n          playerNumber={\n            players.findIndex((player) => player.name === username) === 0\n              ? Players.PLAYER_ONE\n              : Players.PLAYER_TWO\n          }\n          username={username}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default JoinGamePage;\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport Homepage from \"./pages/Homepage/Homepage\";\nimport LocalMultiplayerPage from \"./pages/LocalMultiplayer/LocalMultiplayerPage\";\nimport CreateGamePage from \"./pages/CreateGame/CreateGamePage\";\nimport JoinGamePage from \"./pages/JoinGame/JoinGamePage\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Router>\n        <div>\n          <Routes>\n            <Route path=\"/create\" element={<CreateGamePage />} />\n            <Route path=\"/join\" element={<JoinGamePage />} />\n            <Route\n              path=\"/local-multiplayer\"\n              element={<LocalMultiplayerPage />}\n            />\n            <Route path=\"/\" element={<Homepage />} />\n          </Routes>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}